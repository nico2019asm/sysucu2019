/////EJERCICIO 4
//PARTE A -- ONDA CUADRADA  ---  DISTINTAS DURACIONES (TODOS A 8KHz)

//PRIMER ONDA CUADRADA
//ALTURA 5, DURACION 0.5 s    ----> 1/2 segundo son 4000 muestras

g1 = linspace(0,4.999875,4000);
k1 = ones(g1)*5;

wave1 = k1;


//SEGUNDA ONDA CUADRADA
//ALTURA 0.75, DURACION 1 s ---> 1segundo son 8000 muestras


g2 = linspace(0,0.999875,8000);
k2 = ones(g2)*(0.75);

wave2 = k2;


//TERCER ONDA CUADRADA
//ALTURA 0.5, DURACION 0,02 s ----> 160 muestras

g3 = linspace(0,0.199875,160);
k3 = ones(g3)*(0.5);

wave3 = k3;

//CUARTA ONDA CUADRADA
//ALTURA 0.4, DURACION 0,1 s ----> 800 muestras

g4 = linspace(0,0.399875,800);
k4 = ones(g4)*(0.4);

wave4 = k4;



//////////////////////////////////////////////////////////////////////
///FUNCIONES DE CODIFICACION Y DECODIFICACION PARA LAS ONDAS CUADRADAS
//////////////////////////////////////////////////////////////////////


//////ONDA 1: altura 5 y duracion 1/2 segundo

///////               CODIFICADOR (ONDA 1)
function y=encoder1(x)
    z=strsplit(strcat(dec2bin(ascii(x))))'
    a=[]
    for i=1:size(z)(2)
        if z(i)=='1' then
            a=[a,wave1]
        else
            a=[a,-wave1]
        end
    end
    y=a
endfunction
/////////////////////////////////////////////


/////////                    DECODIFICADOR (ONDA 1)
function y=decoder1(x)
    z=filtro_ej4_1(x);
    for i=1:(size(z)(2)/7)
        a=z(7*(i-1)+1:7*(i-1)+7);
        b=0;
        for j=1:7
            b=b+(a(j)*2^(7-j));
        end;
        c(i)=b;
    end;
    y=ascii(c)
endfunction



////////////               FILTRO (ONDA 1)
function y=filtro_ej4_1(x)
    n=(size(x)(2)/4000); //////
    for i=1:n
        z=x(4000*(i-1)+1:4000*(i-1)+4000);
        if conv(z,wave1)(3000)>0 then
            y(:,i)=1;
        else
            y(:,i)=0;
        end;
    end;
endfunction

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



//////ONDA 2: altura 0.75 y duracion 1 segundos-------------------------------------

///////               CODIFICADOR (ONDA 2)
function y=encoder2(x)
    z=strsplit(strcat(dec2bin(ascii(x))))'
    a=[]
    for i=1:size(z)(2)
        if z(i)=='1' then
            a=[a,wave2]
        else
            a=[a,-wave2]
        end
    end
    y=a
endfunction
/////////////////////////////////////////////


/////////                    DECODIFICADOR (ONDA 2)
function y=decoder2(x)
    z=filtro_ej4_2(x);
    for i=1:(size(z)(2)/7)
        a=z(7*(i-1)+1:7*(i-1)+7);
        b=0;
        for j=1:7
            b=b+(a(j)*2^(7-j));
        end;
        c(i)=b;
    end;
    y=ascii(c)
endfunction



////////////               FILTRO (ONDA 2)
function y=filtro_ej4_2(x)
    n=(size(x)(2)/8000); //////
    for i=1:n
        z=x(8000*(i-1)+1:8000*(i-1)+8000);
        if conv(z,wave2)(6000)>0 then
            y(:,i)=1;
        else
            y(:,i)=0;
        end;
    end;
endfunction

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//////ONDA 3: altura 0.5 y duracion 0,02 segundos-------------------------------------

///////               CODIFICADOR (ONDA 3)
function y=encoder3(x)
    z=strsplit(strcat(dec2bin(ascii(x))))'
    a=[]
    for i=1:size(z)(2)
        if z(i)=='1' then
            a=[a,wave3]
        else
            a=[a,-wave3]
        end
    end
    y=a
endfunction
/////////////////////////////////////////////


/////////                    DECODIFICADOR (ONDA 3)
function y=decoder3(x)
    z=filtro_ej4_3(x);
    for i=1:(size(z)(2)/7)
        a=z(7*(i-1)+1:7*(i-1)+7);
        b=0;
        for j=1:7
            b=b+(a(j)*2^(7-j));
        end;
        c(i)=b;
    end;
    y=ascii(c)
endfunction



////////////               FILTRO (ONDA 3)
function y=filtro_ej4_3(x)
    n=(size(x)(2)/160); //////
    for i=1:n
        z=x(160*(i-1)+1:160*(i-1)+160);
        if conv(z,wave3)(120)>0 then
            y(:,i)=1;
        else
            y(:,i)=0;
        end;
    end;
endfunction

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////ONDA 4: altura 0.4 y duracion 0,1 segundos-------------------------------------

///////               CODIFICADOR (ONDA 4)
function y=encoder4(x)
    z=strsplit(strcat(dec2bin(ascii(x))))'
    a=[]
    for i=1:size(z)(2)
        if z(i)=='1' then
            a=[a,wave4]
        else
            a=[a,-wave4]
        end
    end
    y=a
endfunction
/////////////////////////////////////////////


/////////                    DECODIFICADOR (ONDA 4)
function y=decoder4(x)
    z=filtro_ej4_4(x);
    for i=1:(size(z)(2)/7)
        a=z(7*(i-1)+1:7*(i-1)+7);
        b=0;
        for j=1:7
            b=b+(a(j)*2^(7-j));
        end;
        c(i)=b;
    end;
    y=ascii(c)
endfunction



////////////               FILTRO (ONDA 4)
function y=filtro_ej4_4(x)
    n=(size(x)(2)/800); //////
    for i=1:n
        z=x(800*(i-1)+1:800*(i-1)+800);
        if conv(z,wave4)(600)>0 then
            y(:,i)=1;
        else
            y(:,i)=0;
        end;
    end;
endfunction


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//PARTE B ---> CODIFICAR USANDO LA FUNCION SENO CARDINAL --- ELIGO A=10, a = 1----8KHz

///GENERAMOS LA ONDA, USANDO LA FUNCION SINC DE SCILAB // DURACION DE ONDA: 2s  (16000 muestras)

t=linspace(0,1.999875,16000);
t1=sinc(t)*10;
sinc_wave=t1;



/////FILTRO PARA LA DECODIFICACION
function y=filtro_sinc(x)
    n=(size(x)(2)/16000); //////
    for i=1:n
        z=x(16000*(i-1)+1:16000*(i-1)+16000);
        if conv(z,sinc_wave)(16000)>0 then   /////DONDE ESTAN LOS SIGNOS DE PREGUNTA VA UN VALOR QUE NO LOGRO HALLAR
            y(:,i)=1;
        else
            y(:,i)=0;
        end;
    end;
endfunction


/////COFIFICADOR 
function y=encoder_sinc(x)
    z=strsplit(strcat(dec2bin(ascii(x))))'
    a=[]
    for i=1:size(z)(2)
        if z(i)=='1' then
            a=[a,sinc_wave]
        else
            a=[a,-sinc_wave]
        end
    end
    y=a
endfunction


///DECODIFICADOR
function y=decoder_sinc(x)
    z=filtro_sinc(x);
    for i=1:(size(z)(2)/7)
        a=z(7*(i-1)+1:7*(i-1)+7);
        b=0;
        for j=1:7
            b=b+(a(j)*2^(7-j));
        end;
        c(i)=b;
    end;
    y=ascii(c)
endfunction

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////

//PARTE C --> COMPARAR CON LA ONDA TRIANGULAR

//LA ONDA CUADRADA TENDRÁ MAYOR O MENOR TIEMPO DE CÓMPUTO QUE LA TRIANGULAR
//DEPENDIENDO DE LA FRECUENCIA(QUE ESTAMOS USANDO f = 8KHz), Y TAMBIÉN DEL PERIODO
//(O DURACION) DE LAS ONDAS CUADRADAS.
//UNA MISMA FRECUENCIA, EN DOS ONDAS DE DISTINTA DURACION TENDRAN DISTINTAS 
//CANTIDADES DE MUESTRAS, LO QUE IMPLICA DIFERENTES CANTIDADES DE OPERACIONES


//LA ONDA DE LA FORMA f(t) = 10 sinc (t) TIENE UN TIEMPO DE CÓMPUTO MUCHO MAYOR 
//AL DE LA ONDA TRIANGULAR, POR MÁS QUE ESTÉN A LA MISMA FRECUENCIA
